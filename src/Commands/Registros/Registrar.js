const Discord = require("discord.js")
const User = require('../../../src/database/models/schemas.js');
const mongoose = require('../../../src/database/mongoose.js')


module.exports = {
  name: "registrar", // Coloque o nome do comando
  description: "[üõ†Staff] registra um usuario", // Coloque a descri√ß√£o do comando
  type: Discord.ApplicationCommandType.ChatInput,
  options: [

    {
      name: "usu√°rio",
      description: "Mencione um usu√°rio.",
      type: Discord.ApplicationCommandOptionType.User,
      required: true,
    },

    {
      name: 'nick',
      description: 'Coloque seu nick',
      type: Discord.ApplicationCommandOptionType.String,
      required: true
    },

    {
      name: 'prestige',
      description: 'Coloque seu prestige',
      type: Discord.ApplicationCommandOptionType.Integer,
      required: true
    },

    {
      name: 'level',
      description: 'Coloque seu Level',
      type: Discord.ApplicationCommandOptionType.Integer,
      required: true
    },

    {
      name: 'kills',
      description: 'Coloque suas kills (s√≥ numero sem "."',
      type: Discord.ApplicationCommandOptionType.Integer,
      required: true
    },

    {
      name: 'dmt',
      description: 'Coloque sua DMT principal',
      type: Discord.ApplicationCommandOptionType.String,
      required: true
    },

    {
      name: 'tit√£',
      description: 'Coloque seu tit√£ (caso tenha)',
      type: Discord.ApplicationCommandOptionType.String,
      required: true
    },

    {
      name: 'hor√°rio',
      description: 'Coloque seu hor√°rio de jogo',
      type: Discord.ApplicationCommandOptionType.String,
      required: true
    },

    

  ],

  run: async (client, interaction) => {

    if (!interaction.member.permissions.has(Discord.PermissionFlagsBits.ManageGuild)) {
      return await interaction.reply('Voc√™ n√£o tem permiss√£o para usar este comando.');
    } else {

      const usernm = interaction.options.getUser("usu√°rio");
      const user = interaction.options.getUser("usu√°rio").id;
      const nick = interaction.options.getString('nick');
      const prestige = interaction.options.getInteger('prestige');
      const level = interaction.options.getInteger('level');
      const kills = interaction.options.getInteger('kills');
      const dmt = interaction.options.getString('dmt');
      let titan = interaction.options.getString('tit√£');
      const hora = interaction.options.getString('hor√°rio');

     try {
      const userinfo = new User({
        user: user,
        nick: nick,
        level: level,
        prestige: prestige,
        kills: kills,
        dmt: dmt,
        titan: titan,
        hora: hora,
      });
      await userinfo.save();
      await interaction.reply(`Informa√ß√µes registradas com sucesso para ${usernm.displayName}!`);
      } catch (error) {
      console.error('Erro ao registrar informa√ß√µes:', error);
      await interaction.reply('Ocorreu um erro ao registrar as informa√ß√µes.');
      }

    }
  }
};